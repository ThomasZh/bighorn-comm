package net.younguard.bighorn.comm.codec;

import java.io.UnsupportedEncodingException;

import net.younguard.comm.tlv.TlvObject;

import org.apache.mina.core.buffer.IoBuffer;
import org.apache.mina.core.session.IoSession;
import org.apache.mina.filter.codec.CumulativeProtocolDecoder;
import org.apache.mina.filter.codec.ProtocolDecoderOutput;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TlvPackageDecoder
		extends CumulativeProtocolDecoder
{
	/**
	 * è¿?ä¸???¹æ?????è¿????ï¿??ï¿½æ???????¹ï¿½? 1???å½????å®¹å??å¥½æ?¶ï??è¿????falseï¼??????¥ç?¶ç±»??¥æ?¶ä??ï¿????¹å??ï¿??
	 * 2??????å®¹ä??å¤???¶ï¿½?è¦?ä¸?ï¿????¹å??è¿???¥ç?????å®¹ï??æ­¤æ?¶è?????falseï¼?è¿???·ç?¶ï¿½? CumulativeProtocolDecoder
	 * ä¼?å°????å®¹æ?¾è??IoSessionä¸?ï¼?ç­?ä¸?æ¬¡æ?¥æ?°æ?????å°±è????¨æ?¼è?????äº¤ç?????ç±»ç??doDecode
	 * 3???å½????å®¹å????¶ï??è¿????trueï¼????ä¸ºé??è¦????å°??????¹æ?°æ??è¿?è¡?è¯»å??ï¼???¶ç±»ä¼?å°???©ä???????°æ?????æ¬¡æ?¨é?????ç±»ç??doDecode
	 */
	public boolean doDecode(IoSession session, IoBuffer in, ProtocolDecoderOutput out)
			throws Exception
	{
		if (in.remaining() > 0) {// ?????°æ????¶ï??è¯»ï¿½?6å­??????¤æ??æ¶??????¿åº¦
			in.mark();// ???è®°å?????ä½?ç½?ï¼?ä»¥ä¾¿reset

			short tag = in.getShort();
			int length = in.getInt();
			logger.debug("from ioBuffer to tlv:(tag=" + tag + ", length=" + length + ")");

			// ???æ³?command tag
			if (tag < 1000 || tag > 5100) {
				logger.warn("Not define tag:" + tag);
//				TlvByteUtilPrinter.hexDump("Not define tag:" + tag, in.array());
				throw new UnsupportedEncodingException("Not define tag:" + tag);
			}

			// ???æ³???¿åº¦
			if (length < 0 || length > 65535) {
				logger.warn("Package out of length:" + length);
//				TlvByteUtilPrinter.hexDump("Package out of length:" + length, in.array());
				throw new UnsupportedEncodingException("Package out of length:" + length);
			}

			// å¦????æ¶???????å®¹ç????¿åº¦ä¸?å¤??????´æ?¥è?????true
			if (length > in.remaining()) {// å¦????æ¶???????å®¹ä??å¤?ï¼???????ç½?ï¼???¸å??äº?ä¸?è¯»å??size
				in.reset();
				return false;// ??¥æ?¶æ?°æ?°æ??ï¼?ä»¥æ?¼å?????å®???´æ?°æ??
			} else {
				TlvObject pkg = new TlvObject();
				byte[] body = new byte[length];
				in.get(body, 0, length);
				// TlvByteUtilPrinter.hexDump("ioBuffer payload: ", body,
				// length);

				pkg.setTag(tag);
				pkg.setLength(length);
				pkg.setValue(body);

				out.write(pkg);

				if (in.remaining() > 0) {// å¦????è¯»å?????å®¹å??è¿?ç²?äº????ï¼?å°±è?©ç?¶ç±»???ç»?ä¿ºä??æ¬¡ï??è¿?è¡?ä¸?ä¸?æ¬¡è§£ï¿??
					return true;
				}
			}
		}
		return false;// å¤??????????ï¼?è®©ç?¶ç±»è¿?è¡???¥æ?¶ä??ä¸?ï¿??
	}

	private final static Logger logger = LoggerFactory.getLogger(TlvPackageDecoder.class);

}